{"version":3,"sources":["components/contactList/ContactList.module.css","components/contactEditorElement/ContactEditorElement.module.css","components/contactEditor/ContactEditor.module.css","components/notification/Notification.module.css","components/filter/Filter.module.css","components/App.module.css","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/contactEditorElement/ContactEditorElement.js","components/logo/Logo.js","components/contactEditor/ContactEditor.js","components/notification/Notification.js","components/App.js","index.js"],"names":["module","exports","ContactListItem","idx","number","name","id","onDelete","type","onClick","data-id","ContactList","contacts","TransitionGroup","component","className","styles","contactData","map","CSSTransition","timeout","classNames","Filter","value","onChange","search","placeholder","ContactEditorElement","onHandelChange","contact","form","onSubmit","Logo","initialState","ContactEditor","onAddForm","useState","state","setState","phoneBook","in","appear","unmountOnExit","e","preventDefault","target","Notification","isVisible","notification","App","setContacts","filter","setFilter","setIsVisible","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","item","includes","setTimeout","uuidv4","length","toLowerCase","dataset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c28cd5a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1KQMM\",\"contactData\":\"ContactList_contactData__3J4iC\",\"enter\":\"ContactList_enter__X_Pjb\",\"enterActive\":\"ContactList_enterActive__2bgKv\",\"exit\":\"ContactList_exit__1v8an\",\"exitActive\":\"ContactList_exitActive__1pVlQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactEditorElement_contact__1ZGRs\",\"form\":\"ContactEditorElement_form__512lm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"ContactEditor_appear__1LDmw\",\"appearActive\":\"ContactEditor_appearActive__epxpc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__J51AU\",\"enter\":\"Notification_enter__2nLPt\",\"enterActive\":\"Notification_enterActive__iI3sW\",\"exit\":\"Notification_exit__1vUki\",\"exitActive\":\"Notification_exitActive__Qeaen\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Filter_search__1bo2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"App_enter__3RlQg\",\"enterActive\":\"App_enterActive__wKHjl\",\"exit\":\"App_exit__WW_aw\",\"exitActive\":\"App_exitActive__djMPn\"};","import React from 'react'\r\n\r\nconst ContactListItem = ({idx, number, name, id, onDelete}) => {\r\n    return (\r\n        <li>\r\n   <p>{idx+1}.  Name: {name}</p>\r\n   <p>  {number}</p>\r\n   <button type='button' onClick={onDelete} data-id={id}>Delete</button>\r\n   </li>\r\n    )\r\n}\r\n\r\nexport default ContactListItem\r\n","import React from 'react'\r\nimport styles from './ContactList.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport ContactListItem from '../contactListItem/ContactListItem'\r\n\r\n\r\nconst ContactList = ({contacts, onDelete}) => {\r\n  return (\r\n\r\n <TransitionGroup component='ul' className= {styles.contactData}>\r\n   {contacts.map(({id, name, number}, idx) => \r\n   <CSSTransition  key={id} timeout={1000} classNames={styles} > \r\n        <ContactListItem id={id} name={name} number={number} idx={idx} onDelete={onDelete}/>    \r\n   </CSSTransition>\r\n   )\r\n   }\r\n \r\n </TransitionGroup>\r\n)\r\n}\r\n \r\nContactList.propTypes = {\r\n\tcontacts: PropTypes.array.isRequired,\r\n\tonDelete: PropTypes.func.isRequired\r\n};\r\nexport default ContactList;\r\n\r\n","import React from 'react'\r\nimport styles from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({value, onChange}) {\r\n    return (\r\n        <div>\r\n            <input className ={styles.search} type='text' value={value} placeholder=\"Search by name\" onChange={onChange}/>\r\n        </div>\r\n    )\r\n}\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n","import React from 'react'\r\nimport styles from './ContactEditorElement.module.css'\r\n\r\n\r\nconst ContactEditorElement = ({name, number, onChange, onHandelChange}) => {\r\n\r\n  \r\n      return (\r\n     \r\n        <div className={styles.contact}>         \r\n      <form className={styles.form} onSubmit={onChange}>\r\n        <label> \r\n        <input type='text' name='name' value={name } placeholder='Name'\r\n        onChange={onHandelChange}/> \r\n          </label>\r\n          <label> \r\n         <input type='tel' name='number' value={number }  placeholder='Number'\r\n        onChange={onHandelChange}/> \r\n        </label>\r\n        <button type=\"submit\">Add contact </button>\r\n      </form>   \r\n            </div>\r\n       \r\n\r\n    ) \r\n       \r\n}\r\nexport default  ContactEditorElement\r\n\r\n","import React from 'react'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <h2 className='title'>\r\n            PHONEBOOK\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport ContactEditorElement from '../contactEditorElement/ContactEditorElement'\r\nimport Logo from '../logo/Logo'\r\nimport styles from '../contactEditor/ContactEditor.module.css'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n}\r\n\r\nconst ContactEditor = ({onAddForm}) => {\r\n\r\nconst[state, setState] = useState({...initialState})  \r\n\r\n    const onHandelChange = (e) => {\r\n        const {name} = e.target\r\n        setState({...state, [name]: e.target.value})\r\n      }\r\n      \r\n  const  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n   onAddForm({name: state.name, number: state.number})\r\n    setState({...initialState})\r\n    }\r\n    \r\n  \r\n        return (\r\n          <div className={styles.phoneBook}>\r\n          <CSSTransition\r\n           in={true}\r\n           appear={true}\r\n           classNames={styles}\r\n           timeout={500}\r\n           unmountOnExit\r\n           > \r\n           <Logo/>\r\n           </CSSTransition>\r\n          <ContactEditorElement name={state.name} number={state.number} \r\n          onChange={handelSubmit} onHandelChange={onHandelChange}/>\r\n            </div>   \r\n        )\r\n    \r\n}\r\n\r\nexport default ContactEditor\r\n\r\n\r\n/*import React, { Component } from 'react'\r\nimport ContactEditorElement from '../contactEditorElement/ContactEditorElement'\r\n\r\nexport default class ContactEditor extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n      }\r\n      onHandelChange = (e) => {\r\n        const {name, value} = e.target\r\n        this.setState({[name]: value})\r\n      }\r\n      \r\n    handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    this.props.onAddForm(this.state.name, this.state.number)\r\n    this.setState({name: '', number:''})\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n          <ContactEditorElement name={this.state.name} number={this.state.number} \r\n          onChange={this.handelSubmit} onHandelChange={this.onHandelChange}/>\r\n           \r\n        )\r\n    }\r\n}*/","import React from 'react'\r\nimport styles from './Notification.module.css'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nconst Notification = ({isVisible}) => {\r\n    return (\r\n        <CSSTransition\r\n        in={isVisible}\r\n        timeout = {250}\r\n        classNames={styles}\r\n        unmountOnExit>\r\n        <div className={styles.notification} >\r\n        Contact already exists\r\n        </div>\r\n        </CSSTransition>\r\n        \r\n    )\r\n}\r\n\r\nexport default Notification\r\n","\nimport React, { useState, useEffect  } from 'react'\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from './contactList/ContactList'\nimport Filter from './filter/Filter'\nimport ContactEditor from './contactEditor/ContactEditor'\nimport { CSSTransition } from 'react-transition-group'\nimport styles from './App.module.css'\nimport Notification from '../components/notification/Notification'\n\n\n \n  const App = () => {\n\n  const [contacts, setContacts] = useState([])\n  const [filter, setFilter] = useState('')\n  const [isVisible, setIsVisible] = useState(false);\n\n\n \n\n  useEffect (() => {\n   localStorage.getItem('contacts') && setContacts(JSON.parse(localStorage.getItem('contacts')))\n  }, []);\n  \n\n useEffect (() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n    }, [contacts])\n    \n\n  const getFilter = (e) => {\n    setFilter(e.target.value)\n  }\n  const filterContacts =() => {\n    return [...contacts.filter(item => \n      item.name.toLowerCase().includes(filter.toLowerCase()))]\n    }\n\n \n  const addContact = item => {\n    const searchName = contacts.map(contact => contact.name).includes(item.name)\n    if(searchName) {setTimeout(()=>setIsVisible(true), 500)\n    setTimeout(()=>setIsVisible(false), 2000)}\n    else {\n    setContacts([...contacts, {id: uuidv4(), ...item}])\n    \n    }\n  }\n  \n  const deleteContact = (e) => {\n    const id = e.target.dataset.id;\n    setContacts(\n      [...contacts.filter(contact=> contact.id !== id) \n    ])\n  }\n \n\n    return (\n      <>\n     \n      <Notification isVisible={isVisible}   />\n      \n    \n      <ContactEditor onAddForm={addContact}/>\n      <CSSTransition\n      in={contacts.length > 1}\n      timeout={300}\n      classNames={styles}\n      unmountOnExit\n      >\n        <Filter value={filter} onChange={getFilter}/>\n      </CSSTransition>\n      \n     { <ContactList contacts= {filterContacts()} onDelete={deleteContact}/> }\n    \n    \n     \n      </>\n    )\n\n}\n\nexport default App\n\n/* <CSSTransition\n      in={isVisible}\n      timeout = {250}\n      classNames={styles}\n      unmountOnExit>\n      <Notification  />\n      </CSSTransition>*/\n\n\n\n\n\n\n\n/*import React, { Component } from 'react'\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from './contactList/ContactList'\nimport Filter from './filter/Filter'\nimport ContactEditor from './contactEditor/ContactEditor'\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter:'', \n  }\n  \n  componentDidMount() {\n    if (localStorage.getItem('contacts')) \n    {this.setState({contacts: JSON.parse(localStorage.getItem('contacts'))})}\n  }\n  \n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))}\n    }\n    \n\n  setFilter = (e) => {\n    this.setState({filter: e.target.value})\n  }\n  filterContact =() => {\n    const {contacts, filter} = this.state\n    return contacts.filter(contact => \n      contact.name.toLowerCase().includes(filter.toLowerCase()))\n    }\n  \n \n  addContact = (name, number) => {\n    const searchName = this.state.contacts.map((contact) => contact.name).includes(name)\n    if(searchName) {alert(`${name} is already in contacts`)} \n    else {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number\n    }\n    this.setState(prevState => {\n      return{ contacts: [...prevState.contacts, contact]}})\n    }\n  }\n\n  deleteContact = (id) => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact=> contact.id !== id) \n      }})\n  }\n  render() {\n    const filtredContact = this.filterContact();\n    return (\n      <>\n      <ContactEditor onAddForm={this.addContact}/>\n      {this.state.contacts.length && <Filter value={this.state.filter} onChange={this.setFilter}/>}\n     {this.state.contacts.length && <ContactList contacts= {filtredContact} onDelete={this.deleteContact}/> }\n      \n      </>\n    )\n}\n}\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n\n\nReactDOM.render(\n\n    <App />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}